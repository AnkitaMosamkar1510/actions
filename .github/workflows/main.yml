name: Node.js CI

on:
  workflow_dispatch:
    inputs:
      TARGET_ENVIRONMENT:
        description: "What environment do you want to deploy to?"
        required: true
        type: choice
        options:
          - none
          - sandbox
          - dev
          - qa
          - stage-eu
          - prod-eu
          - prod-eu-dr
      TERRAFORM_COMMAND:
        description: "Should terraform resources be created or destroyed?"
        required: true
        type: choice
        options:
          - apply
          - destroy
      DEPLOY:
        description: "Should the compiled code be pushed as a docker container and deployed via terraform?"
        required: true
        type: choice
        options:
          - no
          - yes

  schedule:
    - cron: "*/3 * * * *" # Runs every 3 minutes

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main' # ✅ Allow scheduled runs

    env:
      SAMPLE: "my ENV"
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main # ✅ Explicitly check out the main branch

      - name: Set TARGET_ENVIRONMENT for Scheduled Runs
        if: github.event_name == 'schedule'
        run: echo "TARGET_ENVIRONMENT=dev" >> $GITHUB_ENV # ✅ Ensure TARGET_ENVIRONMENT is set

      - name: Print TARGET_ENVIRONMENT
        run: echo "Running on TARGET_ENVIRONMENT=$TARGET_ENVIRONMENT"

      - name: Run Jest Tests and Generate Report
        run: |
          mkdir -p test-results
          npx jest --ci --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_DIR: "./test-results"
          JEST_JUNIT_OUTPUT_NAME: "jest-results.xml"

      - name: Upload Jest Test Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: "./test-results/jest-results.xml"
