name: CI/CD

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]

  workflow_dispatch: # Manual trigger for other branches
    inputs:
      target_environment:
        description: "What environment do you want to deploy to?"
        required: true
        type: choice
        options: [dev, qa, stage, prod]
      terraform_command:
        description: "Should terraform resources be created or destroyed? IF YOU SET THIS TO DESTROY, ALL TERRAFORM RESOURCES WILL BE DESTROYED."
        required: false
        type: choice
        options: ["apply", "destroy"]
      deploy:
        description: "Should the compiled code be pushed as a docker container and deployed via terraform."
        required: false
        type: choice
        default: "yes"
        options: ["no", "yes"]

concurrency:
  group: ci-cd-${{ github.workflow }}-${{ github.event.inputs.target_environment }}
  cancel-in-progress: true

jobs:
  set-env-vars:
    runs-on: ubuntu-latest
    outputs:
      TARGET_ENVIRONMENT: ${{ steps.set-env.outputs.TARGET_ENVIRONMENT }}
      VAR_FILE: ${{ steps.set-env.outputs.VAR_FILE }}

    steps:
      - name: Set Environment-Specific Variables and Define tfvars file
        id: set-env
        env:
          TARGET_ENVIRONMENT: ${{ inputs.target_environment }}
        run: |
          case "$TARGET_ENVIRONMENT" in
            "dev")
              VAR_FILE="env/dev.tfvars"
              ;;
            "qa")
              VAR_FILE="env/qa.tfvars"
              ;;
            "stage")
              VAR_FILE="env/stage.tfvars"
              ;;
            "prod")
              VAR_FILE="env/prod.tfvars"
              ;;
            *)
              echo "Specified target environment '${TARGET_ENVIRONMENT}' is not supported. Pipeline aborted."
              exit 1
              ;;
          esac
          echo "::set-output name=VAR_FILE::$VAR_FILE"
          echo "::set-output name=TARGET_ENVIRONMENT::$TARGET_ENVIRONMENT"


  terraform:
    needs: set-env-vars
    if: needs.set-env-vars.outputs.TARGET_ENVIRONMENT != 'none'
    uses: ./.github/workflows/terraform.yml
    secrets: inherit
    with:
      TARGET_ENVIRONMENT: ${{ needs.set-env-vars.outputs.TARGET_ENVIRONMENT }}
      VAR_FILE: ${{ needs.set-env-vars.outputs.VAR_FILE }}

